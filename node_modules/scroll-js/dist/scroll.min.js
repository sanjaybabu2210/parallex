async function e(e,o={}){if(!(e instanceof Element||e instanceof Window))throw new Error(`element passed to scrollTo() must be either the window or a DOM element, you passed ${e}!`);o=n(o);const r=(o,n,s,i,l=300,c,a)=>{window.requestAnimationFrame(()=>{const u=Date.now(),d=Math.min(1,(u-i)/l);if(o===n)return a?a():null;!function(e,o){const n=t.getDocument();e===n.body||e===n.documentElement||e instanceof Window?(n.body.scrollTop=o,n.documentElement.scrollTop=o):e.scrollTop=o}(e,c(d)*(n-o)+o),d<1?r(o,n,s,i,l,c,a):a&&a()})},i=function(e){const o=t.getDocument();return e===o.body||e===o.documentElement||e instanceof Window?o.body.scrollTop||o.documentElement.scrollTop:e.scrollTop}(e),l=function(e){const o={window:{y:"scrollY",x:"scrollX"},element:{y:"scrollTop",x:"scrollLeft"}};return e instanceof Window?o.window.y:o.element.y}(e);return new Promise(e=>{r(i,"number"==typeof o.top?o.top:i,l,Date.now(),o.duration,s(o.easing),e)})}function o(o,r,s){!function(e){if(void 0===e){throw new Error("The element passed to scrollIntoView() was undefined.")}if(!(e instanceof HTMLElement))throw new Error(`The element passed to scrollIntoView() must be a valid element. You passed ${e}.`)}(o),!r||r instanceof Element||(s=r,r=void 0);const{duration:i,easing:l}=n(s);r=r||t.getDocument().body;let c=0,a=o?o.offsetTop:0;const u=t.getDocument();return r!==u.body&&r!==u.documentElement||(c=window.pageYOffset,a=o.getBoundingClientRect().top+c),e(r,{top:a,left:0,duration:i,easing:l})}function n(e={}){return"smooth"===e.behavior&&(e.easing="ease-in-out",e.duration=300),"auto"===e.behavior&&(e.duration=0,e.easing="linear"),e}const t={getDocument:()=>document},r={linear:e=>e,"ease-in":e=>e*e,"ease-out":e=>e*(2-e),"ease-in-out":e=>e<.5?2*e*e:(4-2*e)*e-1},s=e=>{const o=r[e||"linear"];if(!o){const o=Object.keys(r).join(",");throw new Error(`Scroll error: scroller does not support an easing option of "${e}". Supported options are ${o}`)}return o};export{r as easingMap,o as scrollIntoView,e as scrollTo,t as utils};
